.\" Copyright (C) 2022 Jens Axboe <axboe@kernel.dk>
.\"
.\" SPDX-License-Identifier: LGPL-2.0-or-later
.\"
.TH io_uring_prep_accept 3 "March 13, 2022" "liburing-2.2" "liburing Manual"
.SH NAME
io_uring_prep_accept  - prepare a accept request
.fi
.SH SYNOPSIS
.nf
.BR "#include <liburing.h>"
.PP
.BI "void io_uring_prep_accept(struct io_uring_sqe *sqe,"
.BI "                          int sockfd,"
.BI "                          struct sockaddr *addr,"
.BI "                          socklen_t addrlen,"
.BI "                          int flags);"
.BI "
.BI "void io_uring_prep_accept_direct(struct io_uring_sqe *sqe,"
.BI "                                int sockfd,"
.BI "                                struct sockaddr *addr,"
.BI "                                socklen_t addrlen,"
.BI "                                int flags,"
.BI "                                unsigned int file_index);"
.PP
.SH DESCRIPTION
.PP
The io_uring_prep_accept() function prepares an accept request. The submission
queue entry
.I sqe
is setup to use the file descriptor
.I sockfd
to start accepting a connection request described by the socket address at
.I addr
and of structure length
.I addrlen
and using modifier flags in
.I flags.

For a direct descriptor accept request, the offset is specified by the
.I file_index
argument. Direct descriptors are io_uring private file descriptors. They
avoid some of the overhead associated with thread shared file tables, and
can be used in any io_uring request that takes a file descriptor. To do so,
.B IOSQE_FIXED_FILE
must be set in the SQE
.I flags
member, and the SQE
.I fd
field should use the direct descriptor value rather than the regular file
descriptor. Direct descriptors are managed like registered files.

This function prepares an async
.BR accept4 (2)
request. See that man page for details.

.SH RETURN VALUE
None
.SH ERRORS
The CQE
.I res
field will contain the result of the operation. See the related man page for
details on possible values. Note that where synchronous system calls will return
.B -1
on failure and set
.I errno
to the actual error value, io_uring never uses
.I errno.
Instead it returns the negated
.I errno
directly in the CQE
.I res
field.
.SH SEE ALSO
.BR io_uring_get_sqe (3), io_uring_submit (3), io_uring_register (2), accept4 (2)
