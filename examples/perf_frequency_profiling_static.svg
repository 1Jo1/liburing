<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>__mutex_unlock_slowpath (4,651,801,934 samples, 8.99%)</title><rect x="262.9" y="133" width="106.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="265.87" y="143.5" >__mutex_unlo..</text>
</g>
<g >
<title>__mutex_lock (7,083,207,002 samples, 13.69%)</title><rect x="646.6" y="117" width="161.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="649.56" y="127.5" >__mutex_lock</text>
</g>
<g >
<title>local_clock (777,520,083 samples, 1.50%)</title><rect x="867.0" y="85" width="17.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="870.05" y="95.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (51,849,144 samples, 0.10%)</title><rect x="522.5" y="133" width="1.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="525.54" y="143.5" ></text>
</g>
<g >
<title>cpus_read_unlock (3,736,696,543 samples, 7.22%)</title><rect x="1044.5" y="133" width="85.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1047.54" y="143.5" >cpus_read_..</text>
</g>
<g >
<title>srso_alias_return_thunk (259,318,977 samples, 0.50%)</title><rect x="223.9" y="101" width="5.9" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="226.89" y="111.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (51,854,810 samples, 0.10%)</title><rect x="1179.4" y="149" width="1.1" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1182.36" y="159.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (103,697,141 samples, 0.20%)</title><rect x="881.2" y="53" width="2.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="884.23" y="63.5" ></text>
</g>
<g >
<title>__lock_acquire.isra.0 (51,770,161 samples, 0.10%)</title><rect x="73.8" y="101" width="1.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="76.78" y="111.5" ></text>
</g>
<g >
<title>lock_acquire (103,695,561 samples, 0.20%)</title><rect x="11.2" y="149" width="2.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="14.18" y="159.5" ></text>
</g>
<g >
<title>lock_release (103,691,380 samples, 0.20%)</title><rect x="13.5" y="149" width="2.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="16.54" y="159.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (51,848,658 samples, 0.10%)</title><rect x="602.9" y="85" width="1.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="605.85" y="95.5" ></text>
</g>
<g >
<title>__mutex_unlock_slowpath (3,365,432,669 samples, 6.50%)</title><rect x="808.0" y="117" width="76.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="811.05" y="127.5" >__mutex_..</text>
</g>
<g >
<title>__mutex_lock (103,695,561 samples, 0.20%)</title><rect x="11.2" y="165" width="2.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="14.18" y="175.5" ></text>
</g>
<g >
<title>lock_acquire (4,789,913,322 samples, 9.25%)</title><rect x="662.2" y="101" width="109.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="665.22" y="111.5" >lock_acquire</text>
</g>
<g >
<title>srso_alias_safe_ret (51,854,810 samples, 0.10%)</title><rect x="1179.4" y="133" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1182.36" y="143.5" ></text>
</g>
<g >
<title>native_sched_clock (310,531,491 samples, 0.60%)</title><rect x="595.8" y="85" width="7.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="598.78" y="95.5" ></text>
</g>
<g >
<title>lock_is_held_type (932,824,829 samples, 1.80%)</title><rect x="75.0" y="133" width="21.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="77.96" y="143.5" >l..</text>
</g>
<g >
<title>lock_release (4,600,108,846 samples, 8.89%)</title><rect x="264.1" y="117" width="104.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="267.05" y="127.5" >lock_release</text>
</g>
<g >
<title>srso_alias_safe_ret (311,098,728 samples, 0.60%)</title><rect x="515.5" y="85" width="7.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="518.45" y="95.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (259,318,977 samples, 0.50%)</title><rect x="223.9" y="85" width="5.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="226.89" y="95.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (258,999,366 samples, 0.50%)</title><rect x="1038.6" y="69" width="5.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1041.64" y="79.5" ></text>
</g>
<g >
<title>__static_call_update (17,612,150,463 samples, 34.03%)</title><rect x="643.0" y="133" width="401.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="646.02" y="143.5" >__static_call_update</text>
</g>
<g >
<title>fget (103,720,106 samples, 0.20%)</title><rect x="15.9" y="165" width="2.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="18.91" y="175.5" ></text>
</g>
<g >
<title>lockdep_sys_exit (51,872,292 samples, 0.10%)</title><rect x="1180.5" y="165" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1183.54" y="175.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (207,290,466 samples, 0.40%)</title><rect x="766.7" y="69" width="4.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="769.70" y="79.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (103,715,047 samples, 0.20%)</title><rect x="511.9" y="53" width="2.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="514.91" y="63.5" ></text>
</g>
<g >
<title>__lock_acquire.isra.0 (51,855,109 samples, 0.10%)</title><rect x="17.1" y="133" width="1.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="20.09" y="143.5" ></text>
</g>
<g >
<title>no-op-bench (51,758,056,591 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >no-op-bench</text>
</g>
<g >
<title>native_sched_clock (103,695,561 samples, 0.20%)</title><rect x="11.2" y="85" width="2.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="14.18" y="95.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (51,847,304 samples, 0.10%)</title><rect x="883.6" y="53" width="1.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="886.59" y="63.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (51,858,395 samples, 0.10%)</title><rect x="260.5" y="85" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="263.51" y="95.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (51,849,144 samples, 0.10%)</title><rect x="522.5" y="117" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="525.54" y="127.5" ></text>
</g>
<g >
<title>find_held_lock (207,166,928 samples, 0.40%)</title><rect x="803.3" y="85" width="4.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="806.32" y="95.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (51,710,907 samples, 0.10%)</title><rect x="1111.9" y="85" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1114.89" y="95.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (51,719,305 samples, 0.10%)</title><rect x="261.7" y="117" width="1.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="264.69" y="127.5" ></text>
</g>
<g >
<title>find_held_lock (207,213,877 samples, 0.40%)</title><rect x="257.0" y="101" width="4.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="259.97" y="111.5" ></text>
</g>
<g >
<title>io_nop (51,764,722 samples, 0.10%)</title><rect x="1129.7" y="133" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1132.73" y="143.5" ></text>
</g>
<g >
<title>local_clock (103,695,561 samples, 0.20%)</title><rect x="11.2" y="117" width="2.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="14.18" y="127.5" ></text>
</g>
<g >
<title>find_held_lock (725,637,556 samples, 1.40%)</title><rect x="850.5" y="85" width="16.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="853.50" y="95.5" ></text>
</g>
<g >
<title>find_held_lock (1,243,502,323 samples, 2.40%)</title><rect x="301.7" y="101" width="28.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="304.73" y="111.5" >fi..</text>
</g>
<g >
<title>find_held_lock (621,560,778 samples, 1.20%)</title><rect x="1098.9" y="101" width="14.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1101.90" y="111.5" ></text>
</g>
<g >
<title>match_held_lock (51,777,038 samples, 0.10%)</title><rect x="805.7" y="69" width="1.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="808.68" y="79.5" ></text>
</g>
<g >
<title>native_sched_clock (362,782,719 samples, 0.70%)</title><rect x="873.0" y="53" width="8.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="875.95" y="63.5" ></text>
</g>
<g >
<title>rcu_is_watching (51,725,835 samples, 0.10%)</title><rect x="514.3" y="101" width="1.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="517.27" y="111.5" ></text>
</g>
<g >
<title>lock_release (3,313,726,941 samples, 6.40%)</title><rect x="809.2" y="101" width="75.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="812.22" y="111.5" >lock_rel..</text>
</g>
<g >
<title>local_clock (414,316,634 samples, 0.80%)</title><rect x="1023.3" y="69" width="9.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1026.28" y="79.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (51,810,497 samples, 0.10%)</title><rect x="367.7" y="53" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="370.74" y="63.5" ></text>
</g>
<g >
<title>local_clock_noinstr (207,407,740 samples, 0.40%)</title><rect x="762.0" y="53" width="4.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="764.97" y="63.5" ></text>
</g>
<g >
<title>local_clock_noinstr (316,005,232 samples, 0.61%)</title><rect x="1121.3" y="85" width="7.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1124.35" y="95.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (258,999,366 samples, 0.50%)</title><rect x="1038.6" y="85" width="5.9" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1041.64" y="95.5" ></text>
</g>
<g >
<title>__static_call_update (18,751,194,453 samples, 36.23%)</title><rect x="96.2" y="149" width="427.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="99.23" y="159.5" >__static_call_update</text>
</g>
<g >
<title>srso_alias_safe_ret (206,974,511 samples, 0.40%)</title><rect x="325.4" y="85" width="4.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="328.36" y="95.5" ></text>
</g>
<g >
<title>lock_acquire (6,738,119,038 samples, 13.02%)</title><rect x="368.9" y="117" width="153.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="371.93" y="127.5" >lock_acquire</text>
</g>
<g >
<title>_raw_spin_lock (51,770,161 samples, 0.10%)</title><rect x="73.8" y="133" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="76.78" y="143.5" ></text>
</g>
<g >
<title>local_clock (362,641,808 samples, 0.70%)</title><rect x="215.6" y="85" width="8.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="218.62" y="95.5" ></text>
</g>
<g >
<title>__lock_acquire.isra.0 (3,889,694,889 samples, 7.52%)</title><rect x="135.2" y="101" width="88.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="138.21" y="111.5" >__lock_acq..</text>
</g>
<g >
<title>local_clock_noinstr (1,502,517,708 samples, 2.90%)</title><rect x="480.0" y="69" width="34.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="483.02" y="79.5" >lo..</text>
</g>
<g >
<title>local_clock_noinstr (465,982,243 samples, 0.90%)</title><rect x="593.4" y="101" width="10.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="596.41" y="111.5" ></text>
</g>
<g >
<title>local_clock_noinstr (103,695,561 samples, 0.20%)</title><rect x="11.2" y="101" width="2.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="14.18" y="111.5" ></text>
</g>
<g >
<title>lock_acquired (1,398,975,926 samples, 2.70%)</title><rect x="229.8" y="117" width="31.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="232.80" y="127.5" >lo..</text>
</g>
<g >
<title>rcu_is_watching (51,827,171 samples, 0.10%)</title><rect x="1128.6" y="101" width="1.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1131.55" y="111.5" ></text>
</g>
<g >
<title>lock_release (3,581,321,913 samples, 6.92%)</title><rect x="1048.1" y="117" width="81.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1051.09" y="127.5" >lock_rele..</text>
</g>
<g >
<title>do_syscall_64 (51,395,185,880 samples, 99.30%)</title><rect x="10.0" y="197" width="1171.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >do_syscall_64</text>
</g>
<g >
<title>cpus_read_unlock (3,522,703,822 samples, 6.81%)</title><rect x="523.7" y="149" width="80.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="526.73" y="159.5" >cpus_read..</text>
</g>
<g >
<title>cpus_read_lock (7,008,040,648 samples, 13.54%)</title><rect x="884.8" y="117" width="159.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="887.77" y="127.5" >cpus_read_lock</text>
</g>
<g >
<title>lock_acquire (51,770,161 samples, 0.10%)</title><rect x="73.8" y="117" width="1.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="76.78" y="127.5" ></text>
</g>
<g >
<title>lock_acquire (103,720,106 samples, 0.20%)</title><rect x="15.9" y="149" width="2.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="18.91" y="159.5" ></text>
</g>
<g >
<title>local_clock (259,245,969 samples, 0.50%)</title><rect x="760.8" y="69" width="5.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="763.79" y="79.5" ></text>
</g>
<g >
<title>local_clock (1,035,947,947 samples, 2.00%)</title><rect x="580.4" y="117" width="23.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="583.42" y="127.5" >l..</text>
</g>
<g >
<title>local_clock (1,703,895,105 samples, 3.29%)</title><rect x="330.1" y="101" width="38.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="333.08" y="111.5" >loc..</text>
</g>
<g >
<title>__lock_acquire.isra.0 (4,561,048,978 samples, 8.81%)</title><rect x="410.3" y="101" width="104.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="413.29" y="111.5" >__lock_acqui..</text>
</g>
<g >
<title>sched_clock_noinstr (259,246,676 samples, 0.50%)</title><rect x="360.7" y="69" width="5.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="363.65" y="79.5" ></text>
</g>
<g >
<title>match_held_lock (51,857,031 samples, 0.10%)</title><rect x="259.3" y="85" width="1.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="262.33" y="95.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (51,872,292 samples, 0.10%)</title><rect x="1180.5" y="181" width="1.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1183.54" y="191.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (311,098,728 samples, 0.60%)</title><rect x="515.5" y="101" width="7.0" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="518.45" y="111.5" ></text>
</g>
<g >
<title>lock_release (3,419,165,444 samples, 6.61%)</title><rect x="526.1" y="133" width="77.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="529.09" y="143.5" >lock_rele..</text>
</g>
<g >
<title>native_sched_clock (362,661,529 samples, 0.70%)</title><rect x="503.6" y="53" width="8.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="506.64" y="63.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (51,719,305 samples, 0.10%)</title><rect x="261.7" y="101" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="264.69" y="111.5" ></text>
</g>
<g >
<title>__do_sys_io_uring_enter (51,343,313,588 samples, 99.20%)</title><rect x="10.0" y="181" width="1170.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >__do_sys_io_uring_enter</text>
</g>
<g >
<title>fput (51,832,983 samples, 0.10%)</title><rect x="18.3" y="165" width="1.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="21.27" y="175.5" ></text>
</g>
<g >
<title>local_clock_noinstr (207,330,670 samples, 0.40%)</title><rect x="219.2" y="69" width="4.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="222.16" y="79.5" ></text>
</g>
<g >
<title>[unknown] (51,758,056,591 samples, 100.00%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >[unknown]</text>
</g>
<g >
<title>local_clock (1,502,517,708 samples, 2.90%)</title><rect x="480.0" y="85" width="34.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="483.02" y="95.5" >lo..</text>
</g>
<g >
<title>srso_alias_safe_ret (207,367,538 samples, 0.40%)</title><rect x="1167.5" y="117" width="4.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1170.54" y="127.5" ></text>
</g>
<g >
<title>native_sched_clock (51,852,908 samples, 0.10%)</title><rect x="1127.4" y="69" width="1.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1130.37" y="79.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (207,290,466 samples, 0.40%)</title><rect x="766.7" y="85" width="4.7" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="769.70" y="95.5" ></text>
</g>
<g >
<title>__io_submit_flush_completions (1,554,096,987 samples, 3.00%)</title><rect x="60.8" y="149" width="35.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="63.80" y="159.5" >__i..</text>
</g>
<g >
<title>local_clock (678,966,241 samples, 1.31%)</title><rect x="1113.1" y="101" width="15.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1116.07" y="111.5" ></text>
</g>
<g >
<title>io_uring_submit (51,395,185,880 samples, 99.30%)</title><rect x="10.0" y="229" width="1171.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >io_uring_submit</text>
</g>
<g >
<title>match_held_lock (103,623,441 samples, 0.20%)</title><rect x="578.1" y="101" width="2.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="581.06" y="111.5" ></text>
</g>
<g >
<title>__mutex_unlock_slowpath (103,691,380 samples, 0.20%)</title><rect x="13.5" y="165" width="2.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="16.54" y="175.5" ></text>
</g>
<g >
<title>rcu_is_watching (311,042,198 samples, 0.60%)</title><rect x="1172.3" y="149" width="7.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1175.26" y="159.5" ></text>
</g>
<g >
<title>lock_acquire (6,800,591,331 samples, 13.14%)</title><rect x="889.5" y="101" width="155.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="892.50" y="111.5" >lock_acquire</text>
</g>
<g >
<title>rcu_is_watching (259,221,430 samples, 0.50%)</title><rect x="1032.7" y="85" width="5.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1035.73" y="95.5" ></text>
</g>
<g >
<title>lock_acquire (4,926,551,776 samples, 9.52%)</title><rect x="117.5" y="117" width="112.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="120.48" y="127.5" >lock_acquire</text>
</g>
<g >
<title>local_clock_noinstr (673,842,117 samples, 1.30%)</title><rect x="869.4" y="69" width="15.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="872.41" y="79.5" ></text>
</g>
<g >
<title>native_sched_clock (719,258,257 samples, 1.39%)</title><rect x="344.3" y="69" width="16.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="347.25" y="79.5" ></text>
</g>
<g >
<title>match_held_lock (51,869,108 samples, 0.10%)</title><rect x="1166.4" y="117" width="1.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1169.35" y="127.5" ></text>
</g>
<g >
<title>local_clock_noinstr (362,628,400 samples, 0.70%)</title><rect x="1024.5" y="53" width="8.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1027.46" y="63.5" ></text>
</g>
<g >
<title>native_sched_clock (258,918,042 samples, 0.50%)</title><rect x="1026.8" y="37" width="5.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1029.83" y="47.5" ></text>
</g>
<g >
<title>match_held_lock (51,871,630 samples, 0.10%)</title><rect x="1110.7" y="85" width="1.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1113.71" y="95.5" ></text>
</g>
<g >
<title>__mutex_lock (7,205,840,463 samples, 13.92%)</title><rect x="98.6" y="133" width="164.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="101.59" y="143.5" >__mutex_lock</text>
</g>
<g >
<title>srso_alias_return_thunk (103,676,283 samples, 0.20%)</title><rect x="366.6" y="69" width="2.3" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="369.56" y="79.5" ></text>
</g>
<g >
<title>__lock_acquire.isra.0 (103,695,561 samples, 0.20%)</title><rect x="11.2" y="133" width="2.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="14.18" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (51,395,185,880 samples, 99.30%)</title><rect x="10.0" y="213" width="1171.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>local_clock_noinstr (1,133,767,330 samples, 2.19%)</title><rect x="343.1" y="85" width="25.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="346.08" y="95.5" >l..</text>
</g>
<g >
<title>__lock_acquire.isra.0 (3,753,321,331 samples, 7.25%)</title><rect x="681.1" y="85" width="85.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="684.13" y="95.5" >__lock_acq..</text>
</g>
<g >
<title>io_issue_sqe (24,924,177,092 samples, 48.15%)</title><rect x="604.0" y="149" width="568.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="607.04" y="159.5" >io_issue_sqe</text>
</g>
<g >
<title>main (362,870,711 samples, 0.70%)</title><rect x="1181.7" y="229" width="8.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1184.72" y="239.5" ></text>
</g>
<g >
<title>__lock_acquire.isra.0 (4,250,174,529 samples, 8.21%)</title><rect x="935.8" y="85" width="96.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="938.83" y="95.5" >__lock_acqu..</text>
</g>
<g >
<title>find_held_lock (622,158,372 samples, 1.20%)</title><rect x="566.2" y="117" width="14.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="569.23" y="127.5" ></text>
</g>
<g >
<title>lock_is_held_type (1,813,791,230 samples, 3.50%)</title><rect x="1130.9" y="133" width="41.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1133.91" y="143.5" >loc..</text>
</g>
<g >
<title>lock_acquired (1,606,407,685 samples, 3.10%)</title><rect x="771.4" y="101" width="36.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="774.42" y="111.5" >loc..</text>
</g>
<g >
<title>srso_alias_safe_ret (259,031,085 samples, 0.50%)</title><rect x="861.1" y="69" width="5.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="864.14" y="79.5" ></text>
</g>
<g >
<title>match_held_lock (103,710,895 samples, 0.20%)</title><rect x="323.0" y="85" width="2.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="326.00" y="95.5" ></text>
</g>
<g >
<title>all (51,758,353,876 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[unknown] (51,758,056,591 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >[unknown]</text>
</g>
<g >
<title>cpus_read_lock (6,738,119,038 samples, 13.02%)</title><rect x="368.9" y="133" width="153.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="371.93" y="143.5" >cpus_read_lock</text>
</g>
<g >
<title>native_sched_clock (207,407,740 samples, 0.40%)</title><rect x="762.0" y="37" width="4.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="764.97" y="47.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (51,846,320 samples, 0.10%)</title><rect x="806.9" y="69" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="809.86" y="79.5" ></text>
</g>
<g >
<title>io_submit_sqes (50,928,579,557 samples, 98.40%)</title><rect x="19.5" y="165" width="1161.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="22.46" y="175.5" >io_submit_sqes</text>
</g>
</g>
</svg>
