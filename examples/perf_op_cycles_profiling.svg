<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>do_syscall_64 (48,060,451,657 samples, 95.41%)</title><rect x="16.0" y="229" width="1125.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.00" y="239.5" >do_syscall_64</text>
</g>
<g >
<title>[unknown] (50,368,812,860 samples, 99.99%)</title><rect x="10.0" y="277" width="1179.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.04" y="287.5" >[unknown]</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (16,388,497 samples, 0.03%)</title><rect x="742.9" y="133" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="745.85" y="143.5" ></text>
</g>
<g >
<title>rcu_is_watching (28,968,748 samples, 0.06%)</title><rect x="343.1" y="133" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="346.10" y="143.5" ></text>
</g>
<g >
<title>sched_use_asym_prio (6,297,270 samples, 0.01%)</title><rect x="567.2" y="53" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="570.23" y="63.5" ></text>
</g>
<g >
<title>local_clock (132,276,254 samples, 0.26%)</title><rect x="82.6" y="165" width="3.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="85.56" y="175.5" ></text>
</g>
<g >
<title>find_held_lock (39,036,193 samples, 0.08%)</title><rect x="351.7" y="133" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="354.65" y="143.5" ></text>
</g>
<g >
<title>tick_nohz_handler (7,552,062 samples, 0.01%)</title><rect x="524.9" y="69" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="527.93" y="79.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (1,149,779,606 samples, 2.28%)</title><rect x="995.9" y="149" width="26.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="998.87" y="159.5" >s..</text>
</g>
<g >
<title>hrtimer_interrupt (7,552,062 samples, 0.01%)</title><rect x="524.9" y="101" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="527.93" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (15,124,964 samples, 0.03%)</title><rect x="742.9" y="101" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="745.85" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,084,633 samples, 0.02%)</title><rect x="942.1" y="85" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="945.09" y="95.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (6,300,344 samples, 0.01%)</title><rect x="355.2" y="117" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="358.19" y="127.5" ></text>
</g>
<g >
<title>local_clock_noinstr (157,471,593 samples, 0.31%)</title><rect x="54.2" y="149" width="3.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="57.23" y="159.5" ></text>
</g>
<g >
<title>match_held_lock (376,586,716 samples, 0.75%)</title><rect x="525.1" y="149" width="8.8" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="528.11" y="159.5" ></text>
</g>
<g >
<title>local_clock_noinstr (97,008,512 samples, 0.19%)</title><rect x="83.4" y="149" width="2.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="86.38" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,552,062 samples, 0.01%)</title><rect x="524.9" y="149" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="527.93" y="159.5" ></text>
</g>
<g >
<title>io_submit_sqes (37,090,636,389 samples, 73.63%)</title><rect x="267.3" y="197" width="868.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="270.30" y="207.5" >io_submit_sqes</text>
</g>
<g >
<title>srso_alias_safe_ret (6,293,258 samples, 0.01%)</title><rect x="362.7" y="133" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="365.71" y="143.5" ></text>
</g>
<g >
<title>lock_is_held_type (6,206,750,207 samples, 12.32%)</title><rect x="850.5" y="165" width="145.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="853.48" y="175.5" >lock_is_held_type</text>
</g>
<g >
<title>local_clock_noinstr (113,374,919 samples, 0.23%)</title><rect x="75.3" y="133" width="2.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="78.27" y="143.5" ></text>
</g>
<g >
<title>local_clock (88,118,649 samples, 0.17%)</title><rect x="352.6" y="133" width="2.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="355.57" y="143.5" ></text>
</g>
<g >
<title>rcu_is_watching (23,935,760 samples, 0.05%)</title><rect x="57.9" y="165" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="60.92" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (7,546,728 samples, 0.01%)</title><rect x="1142.4" y="245" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1145.35" y="255.5" ></text>
</g>
<g >
<title>rcu_is_watching (626,500,614 samples, 1.24%)</title><rect x="1121.3" y="181" width="14.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1124.27" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,347,893 samples, 0.02%)</title><rect x="942.1" y="101" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="945.09" y="111.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (22,668,485 samples, 0.04%)</title><rect x="1141.8" y="229" width="0.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1144.79" y="239.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (100,719,200 samples, 0.20%)</title><rect x="1142.6" y="245" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1145.65" y="255.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (1,119,217,519 samples, 2.22%)</title><rect x="540.8" y="165" width="26.3" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="543.84" y="175.5" >s..</text>
</g>
<g >
<title>update_process_times (7,552,062 samples, 0.01%)</title><rect x="524.9" y="53" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="527.93" y="63.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,627,565 samples, 0.03%)</title><rect x="567.1" y="165" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="570.11" y="175.5" ></text>
</g>
<g >
<title>fget (1,158,751,581 samples, 2.30%)</title><rect x="58.5" y="197" width="27.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="61.54" y="207.5" >f..</text>
</g>
<g >
<title>srso_alias_safe_ret (1,119,217,519 samples, 2.22%)</title><rect x="540.8" y="149" width="26.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="543.84" y="159.5" >s..</text>
</g>
<g >
<title>srso_alias_safe_ret (11,346,619 samples, 0.02%)</title><rect x="82.3" y="149" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="85.29" y="159.5" ></text>
</g>
<g >
<title>lock_acquired (309,812,322 samples, 0.62%)</title><rect x="355.6" y="165" width="7.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="358.60" y="175.5" ></text>
</g>
<g >
<title>update_process_times (15,108,381 samples, 0.03%)</title><rect x="567.1" y="85" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="570.14" y="95.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (18,900,750 samples, 0.04%)</title><rect x="1136.5" y="197" width="0.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1139.51" y="207.5" ></text>
</g>
<g >
<title>match_held_lock (1,796,886,753 samples, 3.57%)</title><rect x="942.4" y="149" width="42.0" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="945.36" y="159.5" >mat..</text>
</g>
<g >
<title>tick_nohz_handler (10,084,633 samples, 0.02%)</title><rect x="942.1" y="69" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="945.09" y="79.5" ></text>
</g>
<g >
<title>update_process_times (13,869,171 samples, 0.03%)</title><rect x="742.9" y="69" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="745.88" y="79.5" ></text>
</g>
<g >
<title>tick_nohz_handler (13,869,171 samples, 0.03%)</title><rect x="742.9" y="85" width="0.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="745.88" y="95.5" ></text>
</g>
<g >
<title>__do_sys_io_uring_enter (47,784,636,834 samples, 94.86%)</title><rect x="17.6" y="213" width="1119.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="20.62" y="223.5" >__do_sys_io_uring_enter</text>
</g>
<g >
<title>_raw_spin_unlock (494,845,056 samples, 0.98%)</title><rect x="343.8" y="165" width="11.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="346.78" y="175.5" ></text>
</g>
<g >
<title>do_raw_spin_unlock (70,553,515 samples, 0.14%)</title><rect x="345.5" y="149" width="1.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="348.52" y="159.5" ></text>
</g>
<g >
<title>native_sched_clock (62,990,697 samples, 0.13%)</title><rect x="84.1" y="133" width="1.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="87.12" y="143.5" ></text>
</g>
<g >
<title>find_held_lock (98,263,858 samples, 0.20%)</title><rect x="80.3" y="165" width="2.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="83.26" y="175.5" ></text>
</g>
<g >
<title>all (50,374,669,357 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>local_clock (122,199,085 samples, 0.24%)</title><rect x="75.1" y="149" width="2.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="78.06" y="159.5" ></text>
</g>
<g >
<title>mutex_lock_nested (5,032,591 samples, 0.01%)</title><rect x="1136.1" y="197" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1139.13" y="207.5" ></text>
</g>
<g >
<title>native_sched_clock (36,514,992 samples, 0.07%)</title><rect x="353.7" y="101" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="356.74" y="111.5" ></text>
</g>
<g >
<title>local_clock_noinstr (56,642,281 samples, 0.11%)</title><rect x="353.3" y="117" width="1.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="356.30" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_lock (644,933,493 samples, 1.28%)</title><rect x="328.7" y="165" width="15.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="331.67" y="175.5" ></text>
</g>
<g >
<title>rcu_is_watching (8,817,644 samples, 0.02%)</title><rect x="36.7" y="165" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="39.65" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,347,893 samples, 0.02%)</title><rect x="942.1" y="149" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="945.09" y="159.5" ></text>
</g>
<g >
<title>local_clock (154,974,967 samples, 0.31%)</title><rect x="33.0" y="149" width="3.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="36.02" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (125,965,691 samples, 0.25%)</title><rect x="12.7" y="245" width="2.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="15.69" y="255.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (17,623,773 samples, 0.03%)</title><rect x="1141.9" y="213" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1144.91" y="223.5" ></text>
</g>
<g >
<title>find_held_lock (41,536,604 samples, 0.08%)</title><rect x="52.4" y="165" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="55.38" y="175.5" ></text>
</g>
<g >
<title>__mutex_lock (885,481,160 samples, 1.76%)</title><rect x="22.5" y="197" width="20.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="25.49" y="207.5" ></text>
</g>
<g >
<title>lock_release (484,938,347 samples, 0.96%)</title><rect x="47.2" y="181" width="11.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="50.15" y="191.5" ></text>
</g>
<g >
<title>find_held_lock (31,488,259 samples, 0.06%)</title><rect x="42.3" y="165" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="45.29" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,888,567 samples, 0.04%)</title><rect x="567.1" y="181" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="570.08" y="191.5" ></text>
</g>
<g >
<title>lock_release (348,710,689 samples, 0.69%)</title><rect x="347.2" y="149" width="8.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="350.17" y="159.5" ></text>
</g>
<g >
<title>match_held_lock (11,327,937 samples, 0.02%)</title><rect x="352.3" y="117" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="355.30" y="127.5" ></text>
</g>
<g >
<title>local_clock (171,347,651 samples, 0.34%)</title><rect x="339.1" y="117" width="4.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="342.08" y="127.5" ></text>
</g>
<g >
<title>no-op-bench (50,372,684,395 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >no-op-bench</text>
</g>
<g >
<title>srso_alias_return_thunk (6,293,258 samples, 0.01%)</title><rect x="362.7" y="149" width="0.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="365.71" y="159.5" ></text>
</g>
<g >
<title>__io_commit_cqring_flush (77,946,684 samples, 0.15%)</title><rect x="326.8" y="165" width="1.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="329.84" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (48,099,497,650 samples, 95.48%)</title><rect x="15.6" y="245" width="1126.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="18.65" y="255.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>io_cqe_cache_refill (5,034,744 samples, 0.01%)</title><rect x="355.5" y="165" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="358.49" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,552,062 samples, 0.01%)</title><rect x="524.9" y="117" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="527.93" y="127.5" ></text>
</g>
<g >
<title>lock_acquire (537,876,780 samples, 1.07%)</title><rect x="24.3" y="181" width="12.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="27.26" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (15,108,381 samples, 0.03%)</title><rect x="567.1" y="117" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="570.14" y="127.5" ></text>
</g>
<g >
<title>match_held_lock (6,287,882 samples, 0.01%)</title><rect x="53.2" y="149" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="56.17" y="159.5" ></text>
</g>
<g >
<title>__mutex_unlock_slowpath (652,382,845 samples, 1.30%)</title><rect x="43.2" y="197" width="15.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="46.23" y="207.5" ></text>
</g>
<g >
<title>local_clock (195,253,445 samples, 0.39%)</title><rect x="53.3" y="165" width="4.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="56.35" y="175.5" ></text>
</g>
<g >
<title>lock_acquired (270,756,896 samples, 0.54%)</title><rect x="36.9" y="181" width="6.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="39.86" y="191.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (12,593,777 samples, 0.03%)</title><rect x="355.0" y="133" width="0.3" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="358.04" y="143.5" ></text>
</g>
<g >
<title>tick_nohz_handler (15,108,381 samples, 0.03%)</title><rect x="567.1" y="101" width="0.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="570.14" y="111.5" ></text>
</g>
<g >
<title>io_issue_sqe (19,435,858,998 samples, 38.58%)</title><rect x="567.5" y="181" width="455.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="570.52" y="191.5" >io_issue_sqe</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,347,893 samples, 0.02%)</title><rect x="942.1" y="133" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="945.09" y="143.5" ></text>
</g>
<g >
<title>main (1,916,682,168 samples, 3.80%)</title><rect x="1145.0" y="261" width="44.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1148.00" y="271.5" >main</text>
</g>
<g >
<title>syscall_exit_to_user_mode (170,020,076 samples, 0.34%)</title><rect x="1137.2" y="213" width="4.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1140.25" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,039,738 samples, 0.01%)</title><rect x="355.4" y="149" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="358.37" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (16,388,497 samples, 0.03%)</title><rect x="742.9" y="117" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="745.85" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,388,497 samples, 0.03%)</title><rect x="742.9" y="165" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="745.85" y="175.5" ></text>
</g>
<g >
<title>rcu_is_watching (17,641,773 samples, 0.04%)</title><rect x="354.6" y="133" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="357.63" y="143.5" ></text>
</g>
<g >
<title>task_tick_fair (5,044,394 samples, 0.01%)</title><rect x="743.1" y="37" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="746.09" y="47.5" ></text>
</g>
<g >
<title>io_nop (4,578,213,792 samples, 9.09%)</title><rect x="743.2" y="165" width="107.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="746.23" y="175.5" >io_nop</text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (5,029,151 samples, 0.01%)</title><rect x="1142.5" y="245" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1145.53" y="255.5" ></text>
</g>
<g >
<title>__io_submit_flush_completions (12,797,951,003 samples, 25.41%)</title><rect x="267.3" y="181" width="299.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="270.30" y="191.5" >__io_submit_flush_completions</text>
</g>
<g >
<title>lock_acquire (622,259,873 samples, 1.24%)</title><rect x="329.2" y="149" width="14.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="332.20" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,039,738 samples, 0.01%)</title><rect x="355.4" y="165" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="358.37" y="175.5" ></text>
</g>
<g >
<title>x64_sys_call (23,938,881 samples, 0.05%)</title><rect x="1141.2" y="213" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1144.23" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5,039,738 samples, 0.01%)</title><rect x="355.4" y="133" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="358.37" y="143.5" ></text>
</g>
<g >
<title>sched_tick (5,037,243 samples, 0.01%)</title><rect x="525.0" y="37" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="527.96" y="47.5" ></text>
</g>
<g >
<title>update_process_times (10,084,633 samples, 0.02%)</title><rect x="942.1" y="53" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="945.09" y="63.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (118,436,079 samples, 0.24%)</title><rect x="1187.1" y="245" width="2.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1190.10" y="255.5" ></text>
</g>
<g >
<title>mutex_unlock (11,342,909 samples, 0.02%)</title><rect x="1136.2" y="197" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1139.24" y="207.5" ></text>
</g>
<g >
<title>native_sched_clock (113,368,367 samples, 0.23%)</title><rect x="55.3" y="133" width="2.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="58.27" y="143.5" ></text>
</g>
<g >
<title>find_held_lock (21,403,637 samples, 0.04%)</title><rect x="362.2" y="149" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="365.18" y="159.5" ></text>
</g>
<g >
<title>io_submit_sqes (7,742,405,456 samples, 15.37%)</title><rect x="85.9" y="197" width="181.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="88.92" y="207.5" >io_submit_sqes</text>
</g>
<g >
<title>io_nop_prep (4,203,878,968 samples, 8.35%)</title><rect x="1022.8" y="181" width="98.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1025.80" y="191.5" >io_nop_prep</text>
</g>
<g >
<title>lock_release (328,700,606 samples, 0.65%)</title><rect x="78.0" y="181" width="7.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="80.99" y="191.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (16,369,446 samples, 0.03%)</title><rect x="567.1" y="149" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="570.14" y="159.5" ></text>
</g>
<g >
<title>local_clock_noinstr (148,674,825 samples, 0.30%)</title><rect x="33.1" y="133" width="3.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="36.14" y="143.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (7,558,239 samples, 0.02%)</title><rect x="1135.9" y="165" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1138.95" y="175.5" ></text>
</g>
<g >
<title>io_uring_submit (48,431,983,915 samples, 96.14%)</title><rect x="10.5" y="261" width="1134.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="13.51" y="271.5" >io_uring_submit</text>
</g>
<g >
<title>lock_is_held_type (7,597,837,720 samples, 15.08%)</title><rect x="362.9" y="165" width="177.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="365.86" y="175.5" >lock_is_held_type</text>
</g>
<g >
<title>__rcu_read_unlock (120,906,351 samples, 0.24%)</title><rect x="59.5" y="181" width="2.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="62.49" y="191.5" ></text>
</g>
<g >
<title>__lock_acquire.isra.0 (490,015,350 samples, 0.97%)</title><rect x="331.6" y="133" width="11.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="334.62" y="143.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (1,149,779,606 samples, 2.28%)</title><rect x="995.9" y="165" width="26.9" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="998.87" y="175.5" >s..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,552,062 samples, 0.01%)</title><rect x="524.9" y="133" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="527.93" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,347,893 samples, 0.02%)</title><rect x="942.1" y="117" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="945.09" y="127.5" ></text>
</g>
<g >
<title>local_clock_noinstr (165,059,874 samples, 0.33%)</title><rect x="339.2" y="101" width="3.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="342.20" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_io_uring_enter (8,822,019 samples, 0.02%)</title><rect x="1137.0" y="213" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1139.95" y="223.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (18,900,750 samples, 0.04%)</title><rect x="1136.5" y="181" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1139.51" y="191.5" ></text>
</g>
<g >
<title>match_held_lock (20,154,572 samples, 0.04%)</title><rect x="81.8" y="149" width="0.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="84.82" y="159.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (7,558,239 samples, 0.02%)</title><rect x="1135.9" y="181" width="0.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1138.95" y="191.5" ></text>
</g>
<g >
<title>sched_balance_trigger (10,075,366 samples, 0.02%)</title><rect x="567.1" y="69" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="570.14" y="79.5" ></text>
</g>
<g >
<title>native_sched_clock (142,375,816 samples, 0.28%)</title><rect x="33.3" y="117" width="3.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="36.29" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,552,062 samples, 0.01%)</title><rect x="524.9" y="85" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="527.93" y="95.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (293,462,752 samples, 0.58%)</title><rect x="534.0" y="149" width="6.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="536.96" y="159.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (20,146,777 samples, 0.04%)</title><rect x="10.0" y="261" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="13.04" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,388,497 samples, 0.03%)</title><rect x="742.9" y="149" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="745.85" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (16,369,446 samples, 0.03%)</title><rect x="567.1" y="133" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="570.14" y="143.5" ></text>
</g>
<g >
<title>lock_acquire (667,568,709 samples, 1.33%)</title><rect x="62.3" y="181" width="15.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="65.35" y="191.5" ></text>
</g>
<g >
<title>[unknown] (50,369,302,651 samples, 99.99%)</title><rect x="10.0" y="293" width="1179.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.04" y="303.5" >[unknown]</text>
</g>
<g >
<title>native_sched_clock (160,013,327 samples, 0.32%)</title><rect x="339.3" y="85" width="3.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="342.26" y="95.5" ></text>
</g>
<g >
<title>__lock_acquire.isra.0 (481,177,347 samples, 0.96%)</title><rect x="25.4" y="165" width="11.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="28.38" y="175.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (487,480,599 samples, 0.97%)</title><rect x="984.4" y="149" width="11.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="987.45" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5,039,738 samples, 0.01%)</title><rect x="355.4" y="117" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="358.37" y="127.5" ></text>
</g>
<g >
<title>__lock_acquire.isra.0 (546,657,687 samples, 1.09%)</title><rect x="65.1" y="165" width="12.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="68.12" y="175.5" ></text>
</g>
<g >
<title>sched_tick (10,087,468 samples, 0.02%)</title><rect x="743.0" y="53" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="745.97" y="63.5" ></text>
</g>
<g >
<title>native_sched_clock (108,334,385 samples, 0.22%)</title><rect x="75.3" y="117" width="2.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="78.33" y="127.5" ></text>
</g>
<g >
<title>fput (10,076,472 samples, 0.02%)</title><rect x="85.7" y="197" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="88.69" y="207.5" ></text>
</g>
</g>
</svg>
